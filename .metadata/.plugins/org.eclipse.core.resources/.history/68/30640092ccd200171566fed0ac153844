package com.org.dapps.shopsyFramework;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;

import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;

import pages.contactUs;
import pages.homePage;

public class baseTest{
	
	WebDriver driver;
	ExtentReports report;
	ExtentTest testLog;
	homePage homeObj;
		
	@BeforeSuite
	public void config() {
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyMMddhhmmss");
//		System.setProperty("webdriver.gecko.driver", "./Drivers/geckodriver.exe");
//		System.setProperty(FirefoxDriver.SystemProperty.DRIVER_USE_MARIONETTE, "true");
//		System.setProperty(FirefoxDriver.SystemProperty.BROWSER_LOGFILE, "/dev/null");
		
		report = new ExtentReports(System.getProperty("user.dir")+"/Reports/Samplereport"+(dateFormat.format(new Date()))+".html", true);

	}
	@BeforeTest
	@Parameters("Browser")
	public void initialize(String Browser) {
		if(Browser.equalsIgnoreCase("firefox")){
				System.setProperty("webdriver.firefox.marionette", "./Drivers/geckodriver.exe");
				driver = new FirefoxDriver();
			}
			//Check if parameter passed as 'chrome'
			else if(browser.equalsIgnoreCase("chrome")){
				//set path to chromedriver.exe
				System.setProperty("webdriver.chrome.driver",".\\chromedriver.exe");
				//create chrome instance
				driver = new ChromeDriver();
			}
			//Check if parameter passed as 'Edge'
					else if(browser.equalsIgnoreCase("Edge")){
						//set path to Edge driver.exe
						System.setProperty("webdriver.edge.driver",".\\MicrosoftWebDriver.exe");
						//create Edge instance
						driver = new EdgeDriver();
					}
			else{
				//If no browser passed throw exception
				throw new Exception("Browser is not correct");
			}
			driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		}
		driver=new FirefoxDriver();
		driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
		driver.manage().deleteAllCookies();
		driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
		driver.navigate().refresh();
		testLog = report.startTest("Shopsy");
		this.homeObj = new contactUs(driver,testLog);
	}
	
	@AfterTest
	public void termination() {
		driver.quit();
		report.endTest(testLog);
		
	}
	
	@AfterSuite
	public void finish() {
		report.flush();
		report.close();
	}
	

}
